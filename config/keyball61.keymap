#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        shift_and_snipe: shift_and_snipe {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_AND_SNIPE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&mo 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESC                  &kp N1        &kp N2        &kp N3  &kp N4  &kp N5                                     &kp N6       &kp N7  &kp N8     &kp N9   &kp N0        &kp DELETE
&kp GRAVE                &kp Q         &kp W         &kp E   &kp R   &kp T                                      &kp Y        &kp U   &kp I      &kp O    &kp P         &kp MINUS
&kp TAB                  &kp A         &kp S         &kp D   &kp F   &kp G                                      &kp H        &kp J   &kp K      &kp L    &kp SEMI      &kp SQT
&mt LEFT_SHIFT CAPSLOCK  &kp Z         &kp X         &kp C   &kp V   &kp B        &kp PAGE_DOWN  &kp PAGE_UP    &kp N        &kp M   &kp COMMA  &kp DOT  &kp FSLH      &kp EQUAL
&kp LCTRL                &kp LEFT_WIN  &kp LEFT_ALT  &mo 3   &mo 6   &lt 4 SPACE  &mo 5          &kp BACKSPACE  &lt 2 ENTER                              &kp C_VOL_DN  &kp C_VOL_UP
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans    &trans    &trans  &trans     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans                          &trans  &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &kp CARET  &kp AMPERSAND  &kp ASTERISK    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &trans           &trans        &trans        &trans        &trans                       &trans     &trans         &kp UP_ARROW    &trans            &trans             &trans
&trans  &bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &trans     &kp LEFT       &kp DOWN_ARROW  &kp RIGHT         &trans             &trans
&trans  &trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans     &trans         &trans          &trans            &kp BACKSLASH      &trans
&trans  &trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                      &trans             &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F12
&trans   &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans   &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans          &trans          &trans     &trans                  &trans    &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans          &kp UP_ARROW    &trans     &trans                  &trans    &trans     &trans     &trans     &trans     &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans                  &mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans  &trans          &trans          &trans     &trans  &trans  &trans  &trans    &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans          &trans          &trans     &trans  &trans  &trans  &mo 3                                      &trans     &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans         &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)     &kp LS(N9)   &kp LS(N0)    &trans
&kp LS(GRAVE)  &kp LS(Q)   &kp LS(W)   &kp LS(E)   &kp LS(R)   &kp LS(T)                   &kp LS(Y)   &kp LS(U)   &kp LS(I)      &kp LS(O)    &kp LS(P)     &kp LS(MINUS)
&trans         &kp LS(A)   &kp LS(S)   &kp LS(D)   &kp LS(F)   &kp LS(G)                   &kp LS(H)   &kp LS(J)   &kp LS(K)      &kp LS(L)    &kp LS(SEMI)  &kp LS(APOS)
&trans         &kp LS(Z)   &kp LS(X)   &kp LS(C)   &kp LS(V)   &kp LS(B)   &trans  &trans  &kp LS(N)   &kp LS(M)   &kp LS(COMMA)  &kp LS(DOT)  &kp LS(FSLH)  &kp LS(EQUAL)
&trans         &trans      &trans      &trans      &trans      &trans      &trans  &trans  &trans                                              &trans        &trans
            >;
        };
    };
};
